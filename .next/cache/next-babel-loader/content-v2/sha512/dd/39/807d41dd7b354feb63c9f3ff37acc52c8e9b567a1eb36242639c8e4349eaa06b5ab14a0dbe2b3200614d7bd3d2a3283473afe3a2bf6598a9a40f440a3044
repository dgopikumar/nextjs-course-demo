{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\GitRepo\\\\Nextjs-Meetups-02\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/React/GitRepo/Nextjs-Meetups-02/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE1B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,YAAD;AACA,MAAA,KAAK,EAAGA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEA,MAAA,KAAK,EAAGF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGA,MAAA,OAAO,EAAGH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIA,MAAA,WAAW,EAAGJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;KAfQN,a;;AA2DT,eAAeA,aAAf","sourcesContent":["import { Fragment } from 'react';\r\nimport Head from 'next/head';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n\r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n\r\n            </Head>\r\n            <MeetupDetail\r\n            image= {props.meetupData.image}\r\n            title= {props.meetupData.title}\r\n            address= {props.meetupData.address}\r\n            description= {props.meetupData.description}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://dbuser:passpass@cluster0.whqft.mongodb.net/?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, {_id:1}).toArray();\r\n    client.close();\r\n\r\n    return {\r\n        //fallback: true,\r\n        fallback: false,\r\n        paths: meetups.map((meetup) => ({\r\n            params: {meetupId: meetup._id.toString()},\r\n        })),\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    //fetch data for a single meetup\r\n    \r\n    const meetupId = context.params.meetupId;\r\n    const client = await MongoClient.connect('mongodb+srv://dbuser:passpass@cluster0.whqft.mongodb.net/?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    \r\n    const meetupsCollection = db.collection('meetups');\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId),});\r\n    console.log(selectedMeetup);\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                description: selectedMeetup.description,\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}